name: Backend Continuous Integration

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
    
    - name: Use Python 3.11
      uses: actions/setup-python@v3
      with:
        node-version: latest

    # Caches dependencies in ~/pip-cache/all-packages directory
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/pip-cache/all-packages
        key: deps-python-${{ hashFiles('**/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-python-

    # Installs dependencies
    - name: Install dependencies
      working-directory: starter/backend
      run: | 
        pip install --upgrade pip
        pip install pipenv
        pip install flake8
    # Runs lint
    - name: Run lint
      working-directory: starter/backend
      run: pipenv run lint

  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
    
    - name: Use Python 3.11
      uses: actions/setup-python@v3
      with:
        node-version: latest

    # Caches dependencies in ~/pip-cache/all-packages directory
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/pip-cache/all-packages
        key: deps-python-${{ hashFiles('**/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-python-

    # Installs dependencies
    - name: Install dependencies
      working-directory: starter/backend
      run: | 
        pip install --upgrade pip
        pip install pipenv
        pip install pytest
        pip install flask
        pip install flask-cors
    # Runs test
    - name: Run test
      working-directory: starter/backend
      run: pipenv run test

# Post-build job that depends on the completion of the previous two jobs
  post-build-actions:
    # Specifies that this job depends on the completion of 'lint' and 'test'
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
    
    - name: Use Python 3.11
      uses: actions/setup-python@v3
      with:
        node-version: latest

    # Caches dependencies in ~/pip-cache/all-packages directory
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/pip-cache/all-packages
        key: deps-python-${{ hashFiles('**/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-python-

    # Installs dependencies
    - name: Install dependencies
      run: | 
        pip install --upgrade pip
        pip install pipenv
        pip install flake8
        pip install pytest
        pip install flask
        pip install flask-cors
      
    # Run application
    - name: build
      working-directory: starter/backend
      run: pipenv run serve
